{
  "address": "0x4FD485BDe06220397Ce775A4f5029d384aa03B3E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "referencePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "settlementPrice",
          "type": "uint256"
        }
      ],
      "name": "betResultBinary",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "computeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "betFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "computeFeeCapped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "betFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_windowDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deployTimestamp",
          "type": "uint256"
        }
      ],
      "name": "getWindowNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "windowNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "windowNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_windowDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deployTimestamp",
          "type": "uint256"
        }
      ],
      "name": "getWindowStartingTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startingTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentWindow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalPrice",
          "type": "uint256"
        }
      ],
      "name": "windowStatus",
      "outputs": [
        {
          "internalType": "enum BetLibrary.WindowStatus",
          "name": "status",
          "type": "BetLibrary.WindowStatus"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x59c99c13f605886f6ec2317423c968eee5fdd6f724775b43b282cc0d374acc67",
  "receipt": {
    "to": null,
    "from": "0x093e4A781365e1BF3a1170A24B152a46E679B33A",
    "contractAddress": "0x4FD485BDe06220397Ce775A4f5029d384aa03B3E",
    "transactionIndex": 0,
    "gasUsed": "283602",
    "logsBloom": "0x
    "blockHash": "0x02f2f198dca100efe358dadc6b22481b54dcddb2e6f7f5816d5da4af692e546a",
    "transactionHash": "0x59c99c13f605886f6ec2317423c968eee5fdd6f724775b43b282cc0d374acc67",
    "logs": [],
    "blockNumber": 32041385,
    "cumulativeGasUsed": "283602",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "bc724065de7df2143a09f3584d1b636a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"referencePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"settlementPrice\",\"type\":\"uint256\"}],\"name\":\"betResultBinary\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"computeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"betFee\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"computeFeeCapped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"betFee\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_windowDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deployTimestamp\",\"type\":\"uint256\"}],\"name\":\"getWindowNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"windowNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"windowNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_windowDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deployTimestamp\",\"type\":\"uint256\"}],\"name\":\"getWindowStartingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startingTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWindow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalPrice\",\"type\":\"uint256\"}],\"name\":\"windowStatus\",\"outputs\":[{\"internalType\":\"enum BetLibrary.WindowStatus\",\"name\":\"status\",\"type\":\"BetLibrary.WindowStatus\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BetLibrary.sol\":\"BetLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/BetLibrary.sol\":{\"content\":\"// Copyright 2021 Binary Cat Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nlibrary BetLibrary {\\n    //Structs and enums\\n    enum BetSide {\\n        down,\\n        up\\n    }\\n    enum BetResult {\\n        down,\\n        up,\\n        tie\\n    }\\n    enum WindowStatus {\\n        notFinalized,\\n        waitingPrice,\\n        failedUpdate,\\n        finalized\\n    }\\n\\n    struct Pool {\\n        uint256 downValue;\\n        uint256 upValue;\\n    }\\n\\n    struct User {\\n        mapping(uint256 => Pool) stake;\\n        uint256[] bets;\\n    }\\n\\n\\n\\n    function windowStatus(\\n        uint256 window,\\n        uint256 currentWindow,\\n        uint256 initialPrice,\\n        uint256 finalPrice\\n    ) public pure returns (WindowStatus status) {\\n        if (currentWindow < window + 2) {\\n            //window not yet settled\\n            return WindowStatus.notFinalized;\\n        } else if (currentWindow < window + 3 && finalPrice == 0) {\\n            //price not updated but update still possible.\\n            return WindowStatus.waitingPrice;\\n        } else if (initialPrice == 0 || finalPrice == 0) {\\n            return WindowStatus.failedUpdate;\\n        } else {\\n            return WindowStatus.finalized;\\n        }\\n    }\\n\\n    function betResultBinary(uint256 referencePrice, uint256 settlementPrice)\\n        public\\n        pure\\n        returns (uint8)\\n    {\\n        if (settlementPrice < referencePrice) {\\n            return 0;\\n        } else if (settlementPrice > referencePrice) {\\n            return 1;\\n        }\\n        return 2;\\n    }\\n\\n    function sharePool(\\n        uint256 value,\\n        uint256 shares,\\n        uint256 totalShares\\n    ) internal pure returns (uint256) {\\n        return (shares * value) / totalShares;\\n    }\\n\\n\\n    function getWindowNumber(\\n        uint256 currentTimestamp,\\n        uint256 _windowDuration,\\n        uint256 _deployTimestamp\\n    ) public pure returns (uint256 windowNumber) {\\n        //n = floor((currentTimestamp - deployTimestamp)/windowDuration  + 1)\\n        windowNumber =\\n            ((currentTimestamp - _deployTimestamp) / _windowDuration)\\n            + 1; //integer division => floor\\n    }\\n\\n    function getWindowStartingTimestamp(\\n        uint256 windowNumber,\\n        uint256 _windowDuration,\\n        uint256 _deployTimestamp\\n    ) public pure returns (uint256 startingTimestamp) {\\n        //deployTimestamp + (n-1 - (offset + 1))*windowDuration\\n        startingTimestamp =\\n            _deployTimestamp +\\n            (windowNumber - 1) *\\n            _deployTimestamp;\\n    }\\n\\n    function computeFee(uint256 value, uint256 _fee)\\n        public\\n        pure\\n        returns (uint256 betFee)\\n    {\\n        betFee = (value * _fee) / 100;\\n    }\\n\\n    function computeFeeCapped(uint256 value, uint256 _fee, uint cap)\\n        public\\n        pure\\n        returns (uint256 betFee)\\n    {\\n        if ( (value * _fee) / 100 < cap) {\\n            betFee = (value * _fee) / 100;\\n        }\\n        else {\\n            betFee = cap;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x100ea4efa7e8468280d5acc339ef74e13538a07fbf062ff0a72642a9afbc3d0f\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x61042f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061007c5760003560e01c8063b134894e1161005a578063b134894e146100cd578063c3390901146100ed578063c886d8a41461010057600080fd5b80632ff284c214610081578063366eedf4146100a7578063508ba0bd146100ba575b600080fd5b61009461008f366004610262565b610125565b6040519081526020015b60405180910390f35b6100946100b5366004610284565b610144565b6100946100c8366004610284565b610187565b6100e06100db3660046102b0565b6101b1565b60405161009e91906102e2565b6100946100fb366004610284565b610214565b61011361010e366004610262565b610236565b60405160ff909116815260200161009e565b600060646101338385610352565b61013d919061038f565b9392505050565b60008160646101538587610352565b61015d919061038f565b101561018057606461016f8486610352565b610179919061038f565b905061013d565b5092915050565b60008261019483866103ca565b61019e919061038f565b6101a99060016103e1565b949350505050565b60006101be8560026103e1565b8410156101cd575060006101a9565b6101d88560036103e1565b841080156101e4575081155b156101f1575060016101a9565b8215806101fc575081155b15610209575060026101a9565b506003949350505050565b6000816102226001866103ca565b61022c9190610352565b6101a990836103e1565b6000828210156102485750600061025c565b828211156102585750600161025c565b5060025b92915050565b6000806040838503121561027557600080fd5b50508035926020909101359150565b60008060006060848603121561029957600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156102c657600080fd5b5050823594602084013594506040840135936060013592509050565b602081016004831061031d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561038a5761038a610323565b500290565b6000826103c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156103dc576103dc610323565b500390565b600082198211156103f4576103f4610323565b50019056fea2646970667358221220b9e186f1c8bfdc04d55c42381a349dbe883049e4079e5203a9c136c4f5e708a564736f6c63430008080033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061007c5760003560e01c8063b134894e1161005a578063b134894e146100cd578063c3390901146100ed578063c886d8a41461010057600080fd5b80632ff284c214610081578063366eedf4146100a7578063508ba0bd146100ba575b600080fd5b61009461008f366004610262565b610125565b6040519081526020015b60405180910390f35b6100946100b5366004610284565b610144565b6100946100c8366004610284565b610187565b6100e06100db3660046102b0565b6101b1565b60405161009e91906102e2565b6100946100fb366004610284565b610214565b61011361010e366004610262565b610236565b60405160ff909116815260200161009e565b600060646101338385610352565b61013d919061038f565b9392505050565b60008160646101538587610352565b61015d919061038f565b101561018057606461016f8486610352565b610179919061038f565b905061013d565b5092915050565b60008261019483866103ca565b61019e919061038f565b6101a99060016103e1565b949350505050565b60006101be8560026103e1565b8410156101cd575060006101a9565b6101d88560036103e1565b841080156101e4575081155b156101f1575060016101a9565b8215806101fc575081155b15610209575060026101a9565b506003949350505050565b6000816102226001866103ca565b61022c9190610352565b6101a990836103e1565b6000828210156102485750600061025c565b828211156102585750600161025c565b5060025b92915050565b6000806040838503121561027557600080fd5b50508035926020909101359150565b60008060006060848603121561029957600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156102c657600080fd5b5050823594602084013594506040840135936060013592509050565b602081016004831061031d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561038a5761038a610323565b500290565b6000826103c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156103dc576103dc610323565b500390565b600082198211156103f4576103f4610323565b50019056fea2646970667358221220b9e186f1c8bfdc04d55c42381a349dbe883049e4079e5203a9c136c4f5e708a564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}